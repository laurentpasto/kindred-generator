{"ast":null,"code":"var _jsxFileName = \"/Users/laurentpastorelli/Documents/WORK/kindred/00- GITHUB-KINDRED/kindred-generator/src/components/LogoGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ArrowLeft, ArrowRight, Shuffle, Download } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#9EC6AA', '#FFE100', '#A5BB1A', '#2265C9', '#666565', '#FB5E00', '#F584B5', '#E40000', '#9774B4'];\nconst LogoGenerator = () => {\n  _s();\n  const [mainColor, setMainColor] = useState(COLORS[0]);\n  const [topColor, setTopColor] = useState(COLORS[1]);\n  const [currentTopShape, setCurrentTopShape] = useState(0);\n  const [mainShapePath, setMainShapePath] = useState('');\n  const [topShapePaths, setTopShapePaths] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const extractPathFromSVG = svgContent => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(svgContent, 'image/svg+xml');\n    const pathElement = doc.querySelector('path');\n    return pathElement ? pathElement.getAttribute('d') : '';\n  };\n  useEffect(() => {\n    const loadSVGs = async () => {\n      try {\n        // Load main shape\n        console.log('Attempting to load main shape...');\n        const mainResponse = await fetch('/svg/main_shape.svg');\n        if (!mainResponse.ok) {\n          throw new Error(`Failed to load main shape: ${mainResponse.status}`);\n        }\n        const mainShapeContent = await mainResponse.text();\n        const mainPath = extractPathFromSVG(mainShapeContent);\n        console.log('Main shape loaded:', !!mainPath);\n        setMainShapePath(mainPath);\n\n        // Load all variant shapes\n        console.log('Loading variant shapes...');\n        const paths = await Promise.all(Array.from({\n          length: 36\n        }, (_, i) => i + 1).map(async num => {\n          const response = await fetch(`/svg/Vectorshape--${num}.svg`);\n          if (!response.ok) {\n            throw new Error(`Failed to load shape ${num}: ${response.status}`);\n          }\n          const content = await response.text();\n          return extractPathFromSVG(content);\n        }));\n        console.log('Variant shapes loaded:', paths.length);\n        setTopShapePaths(paths);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading SVG files:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    loadSVGs();\n  }, []);\n  const handlePrevShape = () => {\n    setCurrentTopShape(current => current > 0 ? current - 1 : topShapePaths.length - 1);\n  };\n  const handleNextShape = () => {\n    setCurrentTopShape(current => current < topShapePaths.length - 1 ? current + 1 : 0);\n  };\n  const getRandomColor = excludeColor => {\n    const availableColors = COLORS.filter(color => color !== excludeColor);\n    return availableColors[Math.floor(Math.random() * availableColors.length)];\n  };\n  const handleRandom = () => {\n    const newMainColor = COLORS[Math.floor(Math.random() * COLORS.length)];\n    const newTopColor = getRandomColor(newMainColor);\n    const newTopShape = Math.floor(Math.random() * topShapePaths.length);\n    setMainColor(newMainColor);\n    setTopColor(newTopColor);\n    setCurrentTopShape(newTopShape);\n  };\n  const handleGenerate = () => {\n    const svgContent = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"${mainShapePath}\" fill=\"${mainColor}\"/>\n  <path d=\"${topShapePaths[currentTopShape]}\" fill=\"${topColor}\"/>\n</svg>`;\n    const blob = new Blob([svgContent], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `logo-${Date.now()}.svg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: \"Loading SVG files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center gap-8 p-8 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-8 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-48 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-gray-600\",\n            children: \"Main Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: COLORS.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\",\n              style: {\n                backgroundColor: color,\n                borderColor: mainColor === color ? color : '#e5e7eb'\n              },\n              onClick: () => {\n                setMainColor(color);\n                if (color === topColor) {\n                  setTopColor(getRandomColor(color));\n                }\n              }\n            }, color, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-gray-600\",\n            children: \"Top Shape Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: COLORS.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\",\n              style: {\n                backgroundColor: color,\n                borderColor: topColor === color ? color : '#e5e7eb',\n                opacity: color === mainColor ? 0.3 : 1,\n                cursor: color === mainColor ? 'not-allowed' : 'pointer'\n              },\n              onClick: () => {\n                if (color !== mainColor) {\n                  setTopColor(color);\n                }\n              }\n            }, color, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 bg-gray-50 rounded-lg p-8 flex items-center justify-center min-h-[400px]\",\n        children: mainShapePath && topShapePaths[currentTopShape] ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"200\",\n          height: \"200\",\n          viewBox: \"0 0 100 100\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: mainShapePath,\n            fill: mainColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: topShapePaths[currentTopShape],\n            fill: topColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400\",\n          children: \"No shapes loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevShape,\n        className: \"p-2 rounded hover:bg-gray-100 border\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"Shape \", currentTopShape + 1, \" of \", topShapePaths.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextShape,\n        className: \"p-2 rounded hover:bg-gray-100 border\",\n        children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRandom,\n        className: \"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(Shuffle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), \"Random\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        className: \"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), \"Download SVG\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(LogoGenerator, \"RFWA+6aLEV4jYtERfRj+o2Gps3k=\");\n_c = LogoGenerator;\nexport default LogoGenerator;\nvar _c;\n$RefreshReg$(_c, \"LogoGenerator\");","map":{"version":3,"names":["React","useState","useEffect","ArrowLeft","ArrowRight","Shuffle","Download","jsxDEV","_jsxDEV","COLORS","LogoGenerator","_s","mainColor","setMainColor","topColor","setTopColor","currentTopShape","setCurrentTopShape","mainShapePath","setMainShapePath","topShapePaths","setTopShapePaths","loading","setLoading","error","setError","extractPathFromSVG","svgContent","parser","DOMParser","doc","parseFromString","pathElement","querySelector","getAttribute","loadSVGs","console","log","mainResponse","fetch","ok","Error","status","mainShapeContent","text","mainPath","paths","Promise","all","Array","from","length","_","i","map","num","response","content","message","handlePrevShape","current","handleNextShape","getRandomColor","excludeColor","availableColors","filter","color","Math","floor","random","handleRandom","newMainColor","newTopColor","newTopShape","handleGenerate","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","Date","now","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","borderColor","onClick","opacity","cursor","width","height","viewBox","d","fill","_c","$RefreshReg$"],"sources":["/Users/laurentpastorelli/Documents/WORK/kindred/00- GITHUB-KINDRED/kindred-generator/src/components/LogoGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, ArrowRight, Shuffle, Download } from 'lucide-react';\n\nconst COLORS = [\n  '#9EC6AA', '#FFE100', '#A5BB1A', '#2265C9',\n  '#666565', '#FB5E00', '#F584B5', '#E40000', '#9774B4'\n];\n\nconst LogoGenerator = () => {\n  const [mainColor, setMainColor] = useState(COLORS[0]);\n  const [topColor, setTopColor] = useState(COLORS[1]);\n  const [currentTopShape, setCurrentTopShape] = useState(0);\n  const [mainShapePath, setMainShapePath] = useState('');\n  const [topShapePaths, setTopShapePaths] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const extractPathFromSVG = (svgContent) => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(svgContent, 'image/svg+xml');\n    const pathElement = doc.querySelector('path');\n    return pathElement ? pathElement.getAttribute('d') : '';\n  };\n\n  useEffect(() => {\n    const loadSVGs = async () => {\n      try {\n        // Load main shape\n        console.log('Attempting to load main shape...');\n        const mainResponse = await fetch('/svg/main_shape.svg');\n        if (!mainResponse.ok) {\n          throw new Error(`Failed to load main shape: ${mainResponse.status}`);\n        }\n        const mainShapeContent = await mainResponse.text();\n        const mainPath = extractPathFromSVG(mainShapeContent);\n        console.log('Main shape loaded:', !!mainPath);\n        setMainShapePath(mainPath);\n\n        // Load all variant shapes\n        console.log('Loading variant shapes...');\n        const paths = await Promise.all(\n          Array.from({ length: 36 }, (_, i) => i + 1).map(async (num) => {\n            const response = await fetch(`/svg/Vectorshape--${num}.svg`);\n            if (!response.ok) {\n              throw new Error(`Failed to load shape ${num}: ${response.status}`);\n            }\n            const content = await response.text();\n            return extractPathFromSVG(content);\n          })\n        );\n        console.log('Variant shapes loaded:', paths.length);\n        setTopShapePaths(paths);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading SVG files:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    loadSVGs();\n  }, []);\n\n  const handlePrevShape = () => {\n    setCurrentTopShape(current => \n      current > 0 ? current - 1 : topShapePaths.length - 1\n    );\n  };\n\n  const handleNextShape = () => {\n    setCurrentTopShape(current => \n      current < topShapePaths.length - 1 ? current + 1 : 0\n    );\n  };\n\n  const getRandomColor = (excludeColor) => {\n    const availableColors = COLORS.filter(color => color !== excludeColor);\n    return availableColors[Math.floor(Math.random() * availableColors.length)];\n  };\n\n  const handleRandom = () => {\n    const newMainColor = COLORS[Math.floor(Math.random() * COLORS.length)];\n    const newTopColor = getRandomColor(newMainColor);\n    const newTopShape = Math.floor(Math.random() * topShapePaths.length);\n\n    setMainColor(newMainColor);\n    setTopColor(newTopColor);\n    setCurrentTopShape(newTopShape);\n  };\n\n  const handleGenerate = () => {\n    const svgContent = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"${mainShapePath}\" fill=\"${mainColor}\"/>\n  <path d=\"${topShapePaths[currentTopShape]}\" fill=\"${topColor}\"/>\n</svg>`;\n\n    const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `logo-${Date.now()}.svg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  if (loading) {\n    return <div className=\"p-8\">Loading SVG files...</div>;\n  }\n\n  if (error) {\n    return <div className=\"p-8 text-red-500\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col items-center gap-8 p-8 max-w-4xl mx-auto\">\n      <div className=\"flex gap-8 w-full\">\n        {/* Color Controls */}\n        <div className=\"w-48 space-y-6\">\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm text-gray-600\">Main Shape Color</label>\n            <div className=\"grid grid-cols-3 gap-2\">\n              {COLORS.map(color => (\n                <button\n                  key={color}\n                  className=\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\"\n                  style={{\n                    backgroundColor: color,\n                    borderColor: mainColor === color ? color : '#e5e7eb'\n                  }}\n                  onClick={() => {\n                    setMainColor(color);\n                    if (color === topColor) {\n                      setTopColor(getRandomColor(color));\n                    }\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <label className=\"block text-sm text-gray-600\">Top Shape Color</label>\n            <div className=\"grid grid-cols-3 gap-2\">\n              {COLORS.map(color => (\n                <button\n                  key={color}\n                  className=\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\"\n                  style={{\n                    backgroundColor: color,\n                    borderColor: topColor === color ? color : '#e5e7eb',\n                    opacity: color === mainColor ? 0.3 : 1,\n                    cursor: color === mainColor ? 'not-allowed' : 'pointer'\n                  }}\n                  onClick={() => {\n                    if (color !== mainColor) {\n                      setTopColor(color);\n                    }\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Logo Preview */}\n        <div className=\"flex-1 bg-gray-50 rounded-lg p-8 flex items-center justify-center min-h-[400px]\">\n          {mainShapePath && topShapePaths[currentTopShape] ? (\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\">\n              <path d={mainShapePath} fill={mainColor} />\n              <path d={topShapePaths[currentTopShape]} fill={topColor} />\n            </svg>\n          ) : (\n            <div className=\"text-gray-400\">No shapes loaded</div>\n          )}\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex gap-4 items-center\">\n        <button \n          onClick={handlePrevShape}\n          className=\"p-2 rounded hover:bg-gray-100 border\"\n        >\n          <ArrowLeft className=\"w-6 h-6\" />\n        </button>\n        \n        <span className=\"text-sm text-gray-600\">\n          Shape {currentTopShape + 1} of {topShapePaths.length}\n        </span>\n        \n        <button \n          onClick={handleNextShape}\n          className=\"p-2 rounded hover:bg-gray-100 border\"\n        >\n          <ArrowRight className=\"w-6 h-6\" />\n        </button>\n      </div>\n\n      <div className=\"flex gap-4\">\n        <button\n          onClick={handleRandom}\n          className=\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\"\n        >\n          <Shuffle className=\"w-4 h-4\" />\n          Random\n        </button>\n        \n        <button\n          onClick={handleGenerate}\n          className=\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\"\n        >\n          <Download className=\"w-4 h-4\" />\n          Download SVG\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LogoGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}