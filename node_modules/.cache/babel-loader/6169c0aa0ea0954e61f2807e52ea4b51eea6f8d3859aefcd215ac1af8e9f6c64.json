{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ArrowLeft,ArrowRight,Shuffle,Download}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLORS=['#9EC6AA','#FFE100','#A5BB1A','#2265C9','#666565','#FB5E00','#F584B5','#E40000','#9774B4'];const LogoGenerator=()=>{const[mainColor,setMainColor]=useState(COLORS[0]);const[topColor,setTopColor]=useState(COLORS[1]);const[currentTopShape,setCurrentTopShape]=useState(0);const[mainShapePath,setMainShapePath]=useState('');const[topShapePaths,setTopShapePaths]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Get the base URL for assets\nconst getBaseUrl=()=>{// If in development, use relative path\nif(process.env.NODE_ENV==='development'){return'';}// In production, use the homepage path from package.json\nreturn'/kindred-generator';};const extractPathFromSVG=svgContent=>{const parser=new DOMParser();const doc=parser.parseFromString(svgContent,'image/svg+xml');const pathElement=doc.querySelector('path');return pathElement?pathElement.getAttribute('d'):'';};useEffect(()=>{const loadSVGs=async()=>{try{const baseUrl=getBaseUrl();console.log('Loading SVGs from base URL:',baseUrl);// Load main shape\nconst mainResponse=await fetch(`${baseUrl}/svg/main_shape.svg`);if(!mainResponse.ok){throw new Error(`Failed to load main shape: ${mainResponse.status}`);}const mainShapeContent=await mainResponse.text();const mainPath=extractPathFromSVG(mainShapeContent);setMainShapePath(mainPath);// Load all variant shapes\nconst paths=await Promise.all(Array.from({length:36},(_,i)=>i+1).map(async num=>{const response=await fetch(`${baseUrl}/svg/Vectorshape--${num}.svg`);if(!response.ok){throw new Error(`Failed to load shape ${num}: ${response.status}`);}const content=await response.text();return extractPathFromSVG(content);}));setTopShapePaths(paths);setLoading(false);}catch(error){console.error('Error loading SVG files:',error);setError(error.message);setLoading(false);}};loadSVGs();},[]);const handlePrevShape=()=>{setCurrentTopShape(current=>current>0?current-1:topShapePaths.length-1);};const handleNextShape=()=>{setCurrentTopShape(current=>current<topShapePaths.length-1?current+1:0);};const getRandomColor=excludeColor=>{const availableColors=COLORS.filter(color=>color!==excludeColor);return availableColors[Math.floor(Math.random()*availableColors.length)];};const handleRandom=()=>{const newMainColor=COLORS[Math.floor(Math.random()*COLORS.length)];const newTopColor=getRandomColor(newMainColor);const newTopShape=Math.floor(Math.random()*topShapePaths.length);setMainColor(newMainColor);setTopColor(newTopColor);setCurrentTopShape(newTopShape);};const handleGenerate=()=>{const svgContent=`<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"${mainShapePath}\" fill=\"${mainColor}\"/>\n  <path d=\"${topShapePaths[currentTopShape]}\" fill=\"${topColor}\"/>\n</svg>`;const blob=new Blob([svgContent],{type:'image/svg+xml'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=`logo-${Date.now()}.svg`;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"p-8\",children:\"Loading SVG files...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-red-500\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center gap-8 p-8 max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-8 w-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-48 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-600\",children:\"Main Shape Color\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-2\",children:COLORS.map(color=>/*#__PURE__*/_jsx(\"button\",{className:\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\",style:{backgroundColor:color,borderColor:mainColor===color?color:'#e5e7eb'},onClick:()=>{setMainColor(color);if(color===topColor){setTopColor(getRandomColor(color));}}},color))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-600\",children:\"Top Shape Color\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-2\",children:COLORS.map(color=>/*#__PURE__*/_jsx(\"button\",{className:\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\",style:{backgroundColor:color,borderColor:topColor===color?color:'#e5e7eb',opacity:color===mainColor?0.3:1,cursor:color===mainColor?'not-allowed':'pointer'},onClick:()=>{if(color!==mainColor){setTopColor(color);}}},color))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 bg-gray-50 rounded-lg p-8 flex items-center justify-center min-h-[400px]\",children:mainShapePath&&topShapePaths[currentTopShape]?/*#__PURE__*/_jsxs(\"svg\",{width:\"200\",height:\"200\",viewBox:\"0 0 100 100\",children:[/*#__PURE__*/_jsx(\"path\",{d:mainShapePath,fill:mainColor}),/*#__PURE__*/_jsx(\"path\",{d:topShapePaths[currentTopShape],fill:topColor})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400\",children:\"No shapes loaded\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4 items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevShape,className:\"p-2 rounded hover:bg-gray-100 border\",children:/*#__PURE__*/_jsx(ArrowLeft,{className:\"w-6 h-6\"})}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[\"Shape \",currentTopShape+1,\" of \",topShapePaths.length]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextShape,className:\"p-2 rounded hover:bg-gray-100 border\",children:/*#__PURE__*/_jsx(ArrowRight,{className:\"w-6 h-6\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleRandom,className:\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(Shuffle,{className:\"w-4 h-4\"}),\"Random\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleGenerate,className:\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(Download,{className:\"w-4 h-4\"}),\"Download SVG\"]})]})]});};export default LogoGenerator;","map":{"version":3,"names":["React","useState","useEffect","ArrowLeft","ArrowRight","Shuffle","Download","jsx","_jsx","jsxs","_jsxs","COLORS","LogoGenerator","mainColor","setMainColor","topColor","setTopColor","currentTopShape","setCurrentTopShape","mainShapePath","setMainShapePath","topShapePaths","setTopShapePaths","loading","setLoading","error","setError","getBaseUrl","process","env","NODE_ENV","extractPathFromSVG","svgContent","parser","DOMParser","doc","parseFromString","pathElement","querySelector","getAttribute","loadSVGs","baseUrl","console","log","mainResponse","fetch","ok","Error","status","mainShapeContent","text","mainPath","paths","Promise","all","Array","from","length","_","i","map","num","response","content","message","handlePrevShape","current","handleNextShape","getRandomColor","excludeColor","availableColors","filter","color","Math","floor","random","handleRandom","newMainColor","newTopColor","newTopShape","handleGenerate","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","Date","now","body","appendChild","click","removeChild","revokeObjectURL","className","children","style","backgroundColor","borderColor","onClick","opacity","cursor","width","height","viewBox","d","fill"],"sources":["/Users/laurentpastorelli/Documents/WORK/kindred/00- GITHUB-KINDRED/kindred-generator/src/components/LogoGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ArrowLeft, ArrowRight, Shuffle, Download } from 'lucide-react';\r\n\r\nconst COLORS = [\r\n  '#9EC6AA', '#FFE100', '#A5BB1A', '#2265C9',\r\n  '#666565', '#FB5E00', '#F584B5', '#E40000', '#9774B4'\r\n];\r\n\r\nconst LogoGenerator = () => {\r\n  const [mainColor, setMainColor] = useState(COLORS[0]);\r\n  const [topColor, setTopColor] = useState(COLORS[1]);\r\n  const [currentTopShape, setCurrentTopShape] = useState(0);\r\n  const [mainShapePath, setMainShapePath] = useState('');\r\n  const [topShapePaths, setTopShapePaths] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Get the base URL for assets\r\n  const getBaseUrl = () => {\r\n    // If in development, use relative path\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return '';\r\n    }\r\n    // In production, use the homepage path from package.json\r\n    return '/kindred-generator';\r\n  };\r\n\r\n  const extractPathFromSVG = (svgContent) => {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(svgContent, 'image/svg+xml');\r\n    const pathElement = doc.querySelector('path');\r\n    return pathElement ? pathElement.getAttribute('d') : '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadSVGs = async () => {\r\n      try {\r\n        const baseUrl = getBaseUrl();\r\n        console.log('Loading SVGs from base URL:', baseUrl);\r\n\r\n        // Load main shape\r\n        const mainResponse = await fetch(`${baseUrl}/svg/main_shape.svg`);\r\n        if (!mainResponse.ok) {\r\n          throw new Error(`Failed to load main shape: ${mainResponse.status}`);\r\n        }\r\n        const mainShapeContent = await mainResponse.text();\r\n        const mainPath = extractPathFromSVG(mainShapeContent);\r\n        setMainShapePath(mainPath);\r\n\r\n        // Load all variant shapes\r\n        const paths = await Promise.all(\r\n          Array.from({ length: 36 }, (_, i) => i + 1).map(async (num) => {\r\n            const response = await fetch(`${baseUrl}/svg/Vectorshape--${num}.svg`);\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to load shape ${num}: ${response.status}`);\r\n            }\r\n            const content = await response.text();\r\n            return extractPathFromSVG(content);\r\n          })\r\n        );\r\n        setTopShapePaths(paths);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading SVG files:', error);\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadSVGs();\r\n  }, []);\r\n\r\n  const handlePrevShape = () => {\r\n    setCurrentTopShape(current => \r\n      current > 0 ? current - 1 : topShapePaths.length - 1\r\n    );\r\n  };\r\n\r\n  const handleNextShape = () => {\r\n    setCurrentTopShape(current => \r\n      current < topShapePaths.length - 1 ? current + 1 : 0\r\n    );\r\n  };\r\n\r\n  const getRandomColor = (excludeColor) => {\r\n    const availableColors = COLORS.filter(color => color !== excludeColor);\r\n    return availableColors[Math.floor(Math.random() * availableColors.length)];\r\n  };\r\n\r\n  const handleRandom = () => {\r\n    const newMainColor = COLORS[Math.floor(Math.random() * COLORS.length)];\r\n    const newTopColor = getRandomColor(newMainColor);\r\n    const newTopShape = Math.floor(Math.random() * topShapePaths.length);\r\n\r\n    setMainColor(newMainColor);\r\n    setTopColor(newTopColor);\r\n    setCurrentTopShape(newTopShape);\r\n  };\r\n\r\n  const handleGenerate = () => {\r\n    const svgContent = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n<svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"${mainShapePath}\" fill=\"${mainColor}\"/>\r\n  <path d=\"${topShapePaths[currentTopShape]}\" fill=\"${topColor}\"/>\r\n</svg>`;\r\n\r\n    const blob = new Blob([svgContent], { type: 'image/svg+xml' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `logo-${Date.now()}.svg`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"p-8\">Loading SVG files...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-8 text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-8 p-8 max-w-4xl mx-auto\">\r\n      <div className=\"flex gap-8 w-full\">\r\n        {/* Color Controls */}\r\n        <div className=\"w-48 space-y-6\">\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm text-gray-600\">Main Shape Color</label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              {COLORS.map(color => (\r\n                <button\r\n                  key={color}\r\n                  className=\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\"\r\n                  style={{\r\n                    backgroundColor: color,\r\n                    borderColor: mainColor === color ? color : '#e5e7eb'\r\n                  }}\r\n                  onClick={() => {\r\n                    setMainColor(color);\r\n                    if (color === topColor) {\r\n                      setTopColor(getRandomColor(color));\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm text-gray-600\">Top Shape Color</label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              {COLORS.map(color => (\r\n                <button\r\n                  key={color}\r\n                  className=\"w-8 h-8 rounded-full border-2 transition-all hover:scale-110\"\r\n                  style={{\r\n                    backgroundColor: color,\r\n                    borderColor: topColor === color ? color : '#e5e7eb',\r\n                    opacity: color === mainColor ? 0.3 : 1,\r\n                    cursor: color === mainColor ? 'not-allowed' : 'pointer'\r\n                  }}\r\n                  onClick={() => {\r\n                    if (color !== mainColor) {\r\n                      setTopColor(color);\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Logo Preview */}\r\n        <div className=\"flex-1 bg-gray-50 rounded-lg p-8 flex items-center justify-center min-h-[400px]\">\r\n          {mainShapePath && topShapePaths[currentTopShape] ? (\r\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\">\r\n              <path d={mainShapePath} fill={mainColor} />\r\n              <path d={topShapePaths[currentTopShape]} fill={topColor} />\r\n            </svg>\r\n          ) : (\r\n            <div className=\"text-gray-400\">No shapes loaded</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex gap-4 items-center\">\r\n        <button \r\n          onClick={handlePrevShape}\r\n          className=\"p-2 rounded hover:bg-gray-100 border\"\r\n        >\r\n          <ArrowLeft className=\"w-6 h-6\" />\r\n        </button>\r\n        \r\n        <span className=\"text-sm text-gray-600\">\r\n          Shape {currentTopShape + 1} of {topShapePaths.length}\r\n        </span>\r\n        \r\n        <button \r\n          onClick={handleNextShape}\r\n          className=\"p-2 rounded hover:bg-gray-100 border\"\r\n        >\r\n          <ArrowRight className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex gap-4\">\r\n        <button\r\n          onClick={handleRandom}\r\n          className=\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\"\r\n        >\r\n          <Shuffle className=\"w-4 h-4\" />\r\n          Random\r\n        </button>\r\n        \r\n        <button\r\n          onClick={handleGenerate}\r\n          className=\"flex items-center gap-2 px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\"\r\n        >\r\n          <Download className=\"w-4 h-4\" />\r\n          Download SVG\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}